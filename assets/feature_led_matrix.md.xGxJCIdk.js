import { _ as _export_sfc, c as createElementBlock, o as openBlock, a8 as createStaticVNode } from "./chunks/framework.DyMmIvSC.js";
const __pageData = JSON.parse('{"title":"LED Matrix Lighting","description":"","frontmatter":{},"headers":[],"relativePath":"feature_led_matrix.md","filePath":"feature_led_matrix.md"}');
const _sfc_main = { name: "feature_led_matrix.md" };
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="led-matrix-lighting" tabindex="-1">LED Matrix Lighting <a class="header-anchor" href="#led-matrix-lighting" aria-label="Permalink to &quot;LED Matrix Lighting {#led-matrix-lighting}&quot;">​</a></h1><p>This feature allows you to use LED matrices driven by external drivers. It hooks into the backlight system so you can use the same keycodes as backlighting to control it.</p><p>If you want to use RGB LED&#39;s you should use the <a href="./feature_rgb_matrix">RGB Matrix Subsystem</a> instead.</p><h2 id="driver-configuration" tabindex="-1">Driver configuration <a class="header-anchor" href="#driver-configuration" aria-label="Permalink to &quot;Driver configuration {#driver-configuration}&quot;">​</a></h2><hr><h3 id="is31fl3731" tabindex="-1">IS31FL3731 <a class="header-anchor" href="#is31fl3731" aria-label="Permalink to &quot;IS31FL3731 {#is31fl3731}&quot;">​</a></h3><p>There is basic support for addressable LED matrix lighting with the I2C IS31FL3731 LED controller. To enable it, add this to your <code>rules.mk</code>:</p><div class="language-make vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">make</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LED_MATRIX_ENABLE = yes</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LED_MATRIX_DRIVER = is31fl3731</span></span></code></pre></div><p>You can use between 1 and 4 IS31FL3731 IC&#39;s. Do not specify <code>LED_DRIVER_ADDR_&lt;N&gt;</code> defines for IC&#39;s that are not present on your keyboard. You can define the following items in <code>config.h</code>:</p><table><thead><tr><th>Variable</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>IS31FL3731_I2C_TIMEOUT</code></td><td>(Optional) How long to wait for i2c messages, in milliseconds</td><td>100</td></tr><tr><td><code>IS31FL3731_I2C_PERSISTENCE</code></td><td>(Optional) Retry failed messages this many times</td><td>0</td></tr><tr><td><code>LED_MATRIX_LED_COUNT</code></td><td>(Required) How many LED lights are present across all drivers</td><td></td></tr><tr><td><code>IS31FL3731_I2C_ADDRESS_1</code></td><td>(Required) Address for the first LED driver</td><td></td></tr><tr><td><code>IS31FL3731_I2C_ADDRESS_2</code></td><td>(Optional) Address for the second LED driver</td><td></td></tr><tr><td><code>IS31FL3731_I2C_ADDRESS_3</code></td><td>(Optional) Address for the third LED driver</td><td></td></tr><tr><td><code>IS31FL3731_I2C_ADDRESS_4</code></td><td>(Optional) Address for the fourth LED driver</td><td></td></tr></tbody></table><p>Here is an example using 2 drivers.</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// This is a 7-bit address, that gets left-shifted and bit 0</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// set to 0 for write, 1 for read (as per I2C protocol)</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The address will vary depending on your wiring:</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 00 AD &lt;-&gt; GND</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 01 AD &lt;-&gt; SCL</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 10 AD &lt;-&gt; SDA</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 11 AD &lt;-&gt; VCC</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ADDR represents A1:A0 of the 7-bit address.</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// The result is: 0b11101(ADDR)</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IS31FL3731_I2C_ADDRESS_1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IS31FL3731_I2C_ADDRESS_GND</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IS31FL3731_I2C_ADDRESS_2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IS31FL3731_I2C_ADDRESS_SDA</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LED_DRIVER_1_LED_TOTAL</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LED_DRIVER_2_LED_TOTAL</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 24</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LED_MATRIX_LED_COUNT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (LED_DRIVER_1_LED_TOTAL </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LED_DRIVER_2_LED_TOTAL)</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Note the parentheses, this is so when <code>LED_MATRIX_LED_COUNT</code> is used in code and expanded, the values are added together before any additional math is applied to them. As an example, <code>rand() % (LED_DRIVER_1_LED_TOTAL + LED_DRIVER_2_LED_TOTAL)</code> will give very different results than <code>rand() % LED_DRIVER_1_LED_TOTAL + LED_DRIVER_2_LED_TOTAL</code>.</p></div><p>For split keyboards using <code>LED_MATRIX_SPLIT</code> with an LED driver, you can either have the same driver address or different driver addresses. If using different addresses, use <code>IS31FL3731_I2C_ADDRESS_1</code> for one and <code>IS31FL3731_I2C_ADDRESS_2</code> for the other one. Then, in <code>g_is31fl3731_leds</code>, fill out the correct driver index (0 or 1). If using one address, use <code>IS31FL3731_I2C_ADDRESS_1</code> for both, and use index 0 for <code>g_is31fl3731_leds</code>.</p><p>Define these arrays listing all the LEDs in your <code>&lt;keyboard&gt;.c</code>:</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> is31fl3731_led_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PROGMEM </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">g_is31fl3731_leds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[IS31FL3731_LED_COUNT] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Refer to IS31 manual for these locations</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *    driver</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *    |  LED address</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *    |  | */</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, C1_1  },</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, C1_15 },</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Where <code>Cx_y</code> is the location of the LED in the matrix defined by <a href="https://www.issi.com/WW/pdf/31FL3731.pdf" target="_blank" rel="noreferrer">the datasheet</a> and the header file <code>drivers/led/issi/is31fl3731-mono.h</code>. The <code>driver</code> is the index of the driver you defined in your <code>config.h</code> (<code>0</code>, <code>1</code>, <code>2</code>, or <code>3</code> ).</p><hr><h3 id="is31flcommon" tabindex="-1">IS31FLCOMMON <a class="header-anchor" href="#is31flcommon" aria-label="Permalink to &quot;IS31FLCOMMON {#is31flcommon}&quot;">​</a></h3><p>There is basic support for addressable LED matrix lighting with a selection of I2C ISSI Lumissil LED controllers through a shared common driver. To enable it, add this to your <code>rules.mk</code>:</p><div class="language-makefile vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">makefile</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LED_MATRIX_ENABLE = yes</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LED_MATRIX_DRIVER = &lt;driver name&gt;</span></span></code></pre></div><p>Where <code>&lt;driver name&gt;</code> is the applicable LED driver chip as below</p><table><thead><tr><th>Driver Name</th><th>Data Sheet</th><th>Capability</th></tr></thead><tbody><tr><td><code>IS31FL3742A</code></td><td><a href="https://www.lumissil.com/assets/pdf/core/IS31FL3742A_DS.pdf" target="_blank" rel="noreferrer">datasheet</a></td><td>180 LED, 30x6 Matrix</td></tr><tr><td><code>IS31FL3743A</code></td><td><a href="https://www.lumissil.com/assets/pdf/core/IS31FL3743A_DS.pdf" target="_blank" rel="noreferrer">datasheet</a></td><td>198 LED, 18x11 Matrix</td></tr><tr><td><code>IS31FL3745</code></td><td><a href="https://www.lumissil.com/assets/pdf/core/IS31FL3745_DS.pdf" target="_blank" rel="noreferrer">datasheet</a></td><td>144 LED, 18x8 Matrix</td></tr><tr><td><code>IS31FL3746A</code></td><td><a href="https://www.lumissil.com/assets/pdf/core/IS31FL3746A_DS.pdf" target="_blank" rel="noreferrer">datasheet</a></td><td>72 LED, 18x4 Matrix</td></tr></tbody></table><p>You can use between 1 and 4 IC&#39;s. Do not specify <code>DRIVER_ADDR_&lt;N&gt;</code> define for IC&#39;s if not present on your keyboard. The <code>DRIVER_ADDR_1</code> default assumes that all Address pins on the controller have been connected to GND. Drivers that have SYNC functionality have the default settings to disable if 1 driver. If more than 1 drivers then <code>DRIVER_ADDR_1</code> will be set to Master and the remaiing ones set to Slave.</p><p>Configure the hardware via your <code>config.h</code>:</p><table><thead><tr><th>Variable</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>ISSI_TIMEOUT</code></td><td>(Optional) How long to wait for i2c messages, in milliseconds</td><td>100</td></tr><tr><td><code>ISSI_PERSISTENCE</code></td><td>(Optional) Retry failed messages this many times</td><td>0</td></tr><tr><td><code>LED_MATRIX_LED_COUNT</code></td><td>(Required) How many LED lights are present across all drivers</td><td></td></tr><tr><td><code>DRIVER_ADDR_1</code></td><td>(Optional) Address for the first LED driver</td><td></td></tr><tr><td><code>DRIVER_ADDR_&lt;N&gt;</code></td><td>(Required) Address for the additional LED drivers</td><td></td></tr><tr><td><code>ISSI_SSR_&lt;N&gt;</code></td><td>(Optional) Configuration for the Spread Spectrum Register</td><td></td></tr><tr><td><code>ISSI_CONFIGURATION</code></td><td>(Optional) Configuration for the Configuration Register</td><td></td></tr><tr><td><code>ISSI_GLOBALCURRENT</code></td><td>(Optional) Configuration for the Global Current Register</td><td>0xFF</td></tr><tr><td><code>ISSI_PULLDOWNUP</code></td><td>(Optional) Configuration for the Pull Up &amp; Pull Down Register</td><td></td></tr><tr><td><code>ISSI_TEMP</code></td><td>(Optional) Configuration for the Tempature Register</td><td></td></tr><tr><td><code>ISSI_PWM_ENABLE</code></td><td>(Optional) Configuration for the PWM Enable Register</td><td></td></tr><tr><td><code>ISSI_PWM_SET</code></td><td>(Optional) Configuration for the PWM Setting Register</td><td></td></tr><tr><td><code>ISSI_SCAL_LED </code></td><td>(Optional) Configuration for the LEDs Scaling Registers</td><td>0xFF</td></tr><tr><td><code>ISSI_MANUAL_SCALING</code></td><td>(Optional) If you wish to configure the Scaling Registers manually</td><td></td></tr></tbody></table><p>Defaults</p><table><thead><tr><th>Variable</th><th>IS31FL3742A</th><th>IS31FL3743A</th><th>IS31FL3745</th><th>IS31FL3746</th></tr></thead><tbody><tr><td><code>DRIVER_ADDR_1</code></td><td>0b0110000</td><td>0b0100000</td><td>0b0100000</td><td>0b1100000</td></tr><tr><td><code>ISSI_SSR_1</code></td><td>0x00</td><td>0x00 / 0x60</td><td>0x00 / 0xC0</td><td>0x00</td></tr><tr><td><code>ISSI_SSR_&lt;2-4&gt;</code></td><td>0x00</td><td>0x40</td><td>0x80</td><td>0x00</td></tr><tr><td><code>ISSI_CONFIGURATION</code></td><td>0x31</td><td>0x01</td><td>0x31</td><td>0x01</td></tr><tr><td><code>ISSI_PULLDOWNUP</code></td><td>0x55</td><td>0x33</td><td>0x33</td><td>0x33</td></tr><tr><td><code>ISSI_TEMP</code></td><td>N/A</td><td>0x00</td><td>0x00</td><td>0x00</td></tr><tr><td><code>ISSI_PWM_ENABLE</code></td><td>N/A</td><td>N/A</td><td>N/A</td><td>0x00</td></tr><tr><td><code>ISSI_PWM_SET</code></td><td>0x00</td><td>N/A</td><td>N/A</td><td>0x00</td></tr></tbody></table><p>Here is an example using 2 drivers.</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DRIVER_ADDR_2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> 0b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0100001</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DRIVER_1_LED_TOTAL</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 66</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DRIVER_2_LED_TOTAL</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 42</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LED_MATRIX_LED_COUNT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (DRIVER_1_LED_TOTAL </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DRIVER_2_LED_TOTAL)</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Note the parentheses, this is so when <code>LED_MATRIX_LED_COUNT</code> is used in code and expanded, the values are added together before any additional math is applied to them. As an example, <code>rand() % (DRIVER_1_LED_TOTAL + DRIVER_2_LED_TOTAL)</code> will give very different results than <code>rand() % DRIVER_1_LED_TOTAL + DRIVER_2_LED_TOTAL</code>.</p></div><p>Currently only 4 drivers are supported, but it would be trivial to support for more. Note that using a combination of different drivers is not supported. All drivers must be of the same model.</p><p>Define these arrays listing all the LEDs in your <code>&lt;keyboard&gt;.c</code>:</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> is31_led PROGMEM </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">g_is31_leds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[LED_MATRIX_LED_COUNT] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Refer to IS31 manual for these locations</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *    driver</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *    |  LED address</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *    |  | */</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, SW1_CS1 },</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, SW1_CS2 },</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Where <code>CSx_SWx</code> is the location of the LED in the matrix defined by the datasheet. The <code>driver</code> is the index of the driver you defined in your <code>config.h</code> (<code>0</code>, <code>1</code>, <code>2</code>, or <code>3</code> for now).</p><p><code>ISSI_MANUAL_SCALING</code> is used to override the Scaling for individual LED&#39;s. By default they will be set as per <code>ISSI_SCAL_LED</code>. In <code>config.h</code> set how many LED&#39;s you want to manually set scaling for. Eg <code>#define ISSI_MANUAL_SCALING 3</code></p><p>Then Define the array listing all the LEDs you want to override in your <code>&lt;keyboard&gt;.c</code>:</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> is31_led PROGMEM </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">g_is31_scaling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ISSI_MANUAL_SCALING] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*   LED Index</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *   |  Scaling</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *   |  | */</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ....</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Where LED Index is the position of the LED in the <code>g_is31_leds</code> array. The <code>scaling</code> value between 0 and 255 to be written to the Scaling Register.</p><hr><h2 id="common-configuration" tabindex="-1">Common Configuration <a class="header-anchor" href="#common-configuration" aria-label="Permalink to &quot;Common Configuration {#common-configuration}&quot;">​</a></h2><p>From this point forward the configuration is the same for all the drivers. The <code>led_config_t</code> struct provides a key electrical matrix to led index lookup table, what the physical position of each LED is on the board, and what type of key or usage the LED if the LED represents. Here is a brief example:</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">led_config_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g_led_config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { {</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Key Matrix to LED Index</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, NO_LED, NO_LED,   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { NO_LED, NO_LED, NO_LED, NO_LED },</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, NO_LED, NO_LED,   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, NO_LED, NO_LED,   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, {</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // LED Index to Physical Position</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">188</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">187</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">48</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">149</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">112</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, {  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">37</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">48</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, {  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">38</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, {</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // LED Index to Flag</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} };</span></span></code></pre></div><p>The first part, <code>// Key Matrix to LED Index</code>, tells the system what key this LED represents by using the key&#39;s electrical matrix row &amp; col. The second part, <code>// LED Index to Physical Position</code> represents the LED&#39;s physical <code>{ x, y }</code> position on the keyboard. The default expected range of values for <code>{ x, y }</code> is the inclusive range <code>{ 0..224, 0..64 }</code>. This default expected range is due to effects that calculate the center of the keyboard for their animations. The easiest way to calculate these positions is imagine your keyboard is a grid, and the top left of the keyboard represents <code>{ x, y }</code> coordinate <code>{ 0, 0 }</code> and the bottom right of your keyboard represents <code>{ 224, 64 }</code>. Using this as a basis, you can use the following formula to calculate the physical position:</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 224</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (NUMBER_OF_COLS </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COL_POSITION</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (NUMBER_OF_ROWS </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ROW_POSITION</span></span></code></pre></div><p>Where NUMBER_OF_COLS, NUMBER_OF_ROWS, COL_POSITION, &amp; ROW_POSITION are all based on the physical layout of your keyboard, not the electrical layout.</p><p>As mentioned earlier, the center of the keyboard by default is expected to be <code>{ 112, 32 }</code>, but this can be changed if you want to more accurately calculate the LED&#39;s physical <code>{ x, y }</code> positions. Keyboard designers can implement <code>#define LED_MATRIX_CENTER { 112, 32 }</code> in their config.h file with the new center point of the keyboard, or where they want it to be allowing more possibilities for the <code>{ x, y }</code> values. Do note that the maximum value for x or y is 255, and the recommended maximum is 224 as this gives animations runoff room before they reset.</p><p><code>// LED Index to Flag</code> is a bitmask, whether or not a certain LEDs is of a certain type. It is recommended that LEDs are set to only 1 type.</p><h2 id="flags" tabindex="-1">Flags <a class="header-anchor" href="#flags" aria-label="Permalink to &quot;Flags {#flags}&quot;">​</a></h2><table><thead><tr><th>Define</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><code>HAS_FLAGS(bits, flags)</code></td><td><em>n/a</em></td><td>Evaluates to <code>true</code> if <code>bits</code> has all <code>flags</code> set</td></tr><tr><td><code>HAS_ANY_FLAGS(bits, flags)</code></td><td><em>n/a</em></td><td>Evaluates to <code>true</code> if <code>bits</code> has any <code>flags</code> set</td></tr><tr><td><code>LED_FLAG_NONE</code></td><td><code>0x00</code></td><td>If this LED has no flags</td></tr><tr><td><code>LED_FLAG_ALL</code></td><td><code>0xFF</code></td><td>If this LED has all flags</td></tr><tr><td><code>LED_FLAG_MODIFIER</code></td><td><code>0x01</code></td><td>If the LED is on a modifier key</td></tr><tr><td><code>LED_FLAG_KEYLIGHT</code></td><td><code>0x04</code></td><td>If the LED is for key backlight</td></tr><tr><td><code>LED_FLAG_INDICATOR</code></td><td><code>0x08</code></td><td>If the LED is for keyboard state indication</td></tr></tbody></table><h2 id="keycodes" tabindex="-1">Keycodes <a class="header-anchor" href="#keycodes" aria-label="Permalink to &quot;Keycodes {#keycodes}&quot;">​</a></h2><table><thead><tr><th>Key</th><th>Aliases</th><th>Description</th></tr></thead><tbody><tr><td><code>QK_LED_MATRIX_ON</code></td><td><code>LM_ON</code></td><td>Turn on LED Matrix</td></tr><tr><td><code>QK_LED_MATRIX_OFF</code></td><td><code>LM_OFF</code></td><td>Turn off LED Matrix</td></tr><tr><td><code>QK_LED_MATRIX_TOGGLE</code></td><td><code>LM_TOGG</code></td><td>Toggle LED Matrix on or off</td></tr><tr><td><code>QK_LED_MATRIX_MODE_NEXT</code></td><td><code>LM_NEXT</code></td><td>Cycle through animations</td></tr><tr><td><code>QK_LED_MATRIX_MODE_PREVIOUS</code></td><td><code>LM_PREV</code></td><td>Cycle through animations in reverse</td></tr><tr><td><code>QK_LED_MATRIX_BRIGHTNESS_UP</code></td><td><code>LM_BRIU</code></td><td>Increase the brightness level</td></tr><tr><td><code>QK_LED_MATRIX_BRIGHTNESS_DOWN</code></td><td><code>LM_BRID</code></td><td>Decrease the brightness level</td></tr><tr><td><code>QK_LED_MATRIX_SPEED_UP</code></td><td><code>LM_SPDU</code></td><td>Increase the animation speed</td></tr><tr><td><code>QK_LED_MATRIX_SPEED_DOWN</code></td><td><code>LM_SPDD</code></td><td>Decrease the animation speed</td></tr></tbody></table><h2 id="led-matrix-effects" tabindex="-1">LED Matrix Effects <a class="header-anchor" href="#led-matrix-effects" aria-label="Permalink to &quot;LED Matrix Effects {#led-matrix-effects}&quot;">​</a></h2><p>These are the effects that are currently available:</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">enum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> led_matrix_effects {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LED_MATRIX_NONE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LED_MATRIX_SOLID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           // Static single val, no speed support</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LED_MATRIX_ALPHAS_MODS,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         // Static dual val, speed is val for LEDs marked as modifiers</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LED_MATRIX_BREATHING,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           // Cycling brightness animation</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LED_MATRIX_BAND,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                // Band fading brightness scrolling left to right</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LED_MATRIX_BAND_PINWHEEL,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       // 3 blade spinning pinwheel fades brightness</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LED_MATRIX_BAND_SPIRAL,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         // Spinning spiral fades brightness</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LED_MATRIX_CYCLE_LEFT_RIGHT,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Full gradient scrolling left to right</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LED_MATRIX_CYCLE_UP_DOWN,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       // Full gradient scrolling top to bottom</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LED_MATRIX_CYCLE_OUT_IN,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Full gradient scrolling out to in</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LED_MATRIX_DUAL_BEACON,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         // Full gradient spinning around center of keyboard</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LED_MATRIX_SOLID_REACTIVE_SIMPLE,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // Pulses keys hit then fades out</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LED_MATRIX_SOLID_REACTIVE_WIDE,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       // Value pulses near a single key hit then fades out</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LED_MATRIX_SOLID_REACTIVE_MULTIWIDE,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Value pulses near multiple key hits then fades out</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LED_MATRIX_SOLID_REACTIVE_CROSS,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // Value pulses the same column and row of a single key hit then fades out</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LED_MATRIX_SOLID_REACTIVE_MULTICROSS,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Value pulses the same column and row of multiple key hits then fades out</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LED_MATRIX_SOLID_REACTIVE_NEXUS,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // Value pulses away on the same column and row of a single key hit then fades out</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LED_MATRIX_SOLID_REACTIVE_MULTINEXUS,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Value pulses away on the same column and row of multiple key hits then fades out</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LED_MATRIX_SOLID_SPLASH,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">             // Value pulses away from a single key hit then fades out</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LED_MATRIX_SOLID_MULTISPLASH,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // Value pulses away from multiple key hits then fades out</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LED_MATRIX_WAVE_LEFT_RIGHT,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           // Sine wave scrolling from left to right</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LED_MATRIX_WAVE_UP_DOWN,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              // Sine wave scrolling from up to down</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LED_MATRIX_EFFECT_MAX</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>You can enable a single effect by defining <code>ENABLE_[EFFECT_NAME]</code> in your <code>config.h</code>:</p><table><thead><tr><th>Define</th><th>Description</th></tr></thead><tbody><tr><td><code>#define ENABLE_LED_MATRIX_ALPHAS_MODS</code></td><td>Enables <code>LED_MATRIX_ALPHAS_MODS</code></td></tr><tr><td><code>#define ENABLE_LED_MATRIX_BREATHING</code></td><td>Enables <code>LED_MATRIX_BREATHING</code></td></tr><tr><td><code>#define ENABLE_LED_MATRIX_BAND</code></td><td>Enables <code>LED_MATRIX_BAND</code></td></tr><tr><td><code>#define ENABLE_LED_MATRIX_BAND_PINWHEEL</code></td><td>Enables <code>LED_MATRIX_BAND_PINWHEEL</code></td></tr><tr><td><code>#define ENABLE_LED_MATRIX_BAND_SPIRAL</code></td><td>Enables <code>LED_MATRIX_BAND_SPIRAL</code></td></tr><tr><td><code>#define ENABLE_LED_MATRIX_CYCLE_LEFT_RIGHT</code></td><td>Enables <code>LED_MATRIX_CYCLE_LEFT_RIGHT</code></td></tr><tr><td><code>#define ENABLE_LED_MATRIX_CYCLE_UP_DOWN</code></td><td>Enables <code>LED_MATRIX_CYCLE_UP_DOWN</code></td></tr><tr><td><code>#define ENABLE_LED_MATRIX_CYCLE_OUT_IN</code></td><td>Enables <code>LED_MATRIX_CYCLE_OUT_IN</code></td></tr><tr><td><code>#define ENABLE_LED_MATRIX_DUAL_BEACON</code></td><td>Enables <code>LED_MATRIX_DUAL_BEACON</code></td></tr><tr><td><code>#define ENABLE_LED_MATRIX_WAVE_LEFT_RIGHT</code></td><td>Enables <code>LED_MATRIX_WAVE_LEFT_RIGHT</code></td></tr><tr><td><code>#define ENABLE_LED_MATRIX_WAVE_UP_DOWN</code></td><td>Enables <code>LED_MATRIX_WAVE_UP_DOWN</code></td></tr></tbody></table><table><thead><tr><th>Reactive Defines</th><th>Description</th></tr></thead><tbody><tr><td><code>#define ENABLE_LED_MATRIX_SOLID_REACTIVE_SIMPLE</code></td><td>Enables <code>LED_MATRIX_SOLID_REACTIVE_SIMPLE</code></td></tr><tr><td><code>#define ENABLE_LED_MATRIX_SOLID_REACTIVE_WIDE</code></td><td>Enables <code>LED_MATRIX_SOLID_REACTIVE_WIDE</code></td></tr><tr><td><code>#define ENABLE_LED_MATRIX_SOLID_REACTIVE_MULTIWIDE</code></td><td>Enables <code>LED_MATRIX_SOLID_REACTIVE_MULTIWIDE</code></td></tr><tr><td><code>#define ENABLE_LED_MATRIX_SOLID_REACTIVE_CROSS</code></td><td>Enables <code>LED_MATRIX_SOLID_REACTIVE_CROSS</code></td></tr><tr><td><code>#define ENABLE_LED_MATRIX_SOLID_REACTIVE_MULTICROSS</code></td><td>Enables <code>LED_MATRIX_SOLID_REACTIVE_MULTICROSS</code></td></tr><tr><td><code>#define ENABLE_LED_MATRIX_SOLID_REACTIVE_NEXUS</code></td><td>Enables <code>LED_MATRIX_SOLID_REACTIVE_NEXUS</code></td></tr><tr><td><code>#define ENABLE_LED_MATRIX_SOLID_REACTIVE_MULTINEXUS</code></td><td>Enables <code>LED_MATRIX_SOLID_REACTIVE_MULTINEXUS</code></td></tr><tr><td><code>#define ENABLE_LED_MATRIX_SOLID_SPLASH</code></td><td>Enables <code>LED_MATRIX_SOLID_SPLASH</code></td></tr><tr><td><code>#define ENABLE_LED_MATRIX_SOLID_MULTISPLASH</code></td><td>Enables <code>LED_MATRIX_SOLID_MULTISPLASH</code></td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>These modes introduce additional logic that can increase firmware size.</p></div><h2 id="custom-led-matrix-effects" tabindex="-1">Custom LED Matrix Effects <a class="header-anchor" href="#custom-led-matrix-effects" aria-label="Permalink to &quot;Custom LED Matrix Effects {#custom-led-matrix-effects}&quot;">​</a></h2><p>By setting <code>LED_MATRIX_CUSTOM_USER</code> (and/or <code>LED_MATRIX_CUSTOM_KB</code>) in <code>rules.mk</code>, new effects can be defined directly from userspace, without having to edit any QMK core files.</p><p>To declare new effects, create a new <code>led_matrix_user/kb.inc</code> that looks something like this:</p><p><code>led_matrix_user.inc</code> should go in the root of the keymap directory. <code>led_matrix_kb.inc</code> should go in the root of the keyboard directory.</p><p>To use custom effects in your code, simply prepend <code>LED_MATRIX_CUSTOM_</code> to the effect name specified in <code>LED_MATRIX_EFFECT()</code>. For example, an effect declared as <code>LED_MATRIX_EFFECT(my_cool_effect)</code> would be referenced with:</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">led_matrix_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(led_MATRIX_CUSTOM_my_cool_effect);</span></span></code></pre></div><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// !!! DO NOT ADD #pragma once !!! //</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Step 1.</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Declare custom effects using the LED_MATRIX_EFFECT macro</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// (note the lack of semicolon after the macro!)</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LED_MATRIX_EFFECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(my_cool_effect)</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LED_MATRIX_EFFECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(my_cool_effect2)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Step 2.</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Define effects inside the `LED_MATRIX_CUSTOM_EFFECT_IMPLS` ifdef block</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#ifdef</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LED_MATRIX_CUSTOM_EFFECT_IMPLS</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// e.g: A simple effect, self-contained within a single method</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> my_cool_effect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">effect_params_t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  LED_MATRIX_USE_LIMITS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(led_min, led_max);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint8_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> led_min; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> led_max; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    led_matrix_set_value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">0x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> led_matrix_check_finished_leds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(led_max);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// e.g: A more complex effect, relying on external methods and state, with</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// dedicated init and run methods</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> uint8_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> some_global_state;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> my_cool_effect2_complex_init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">effect_params_t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  some_global_state </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> my_cool_effect2_complex_run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">effect_params_t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  LED_MATRIX_USE_LIMITS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(led_min, led_max);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint8_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> led_min; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> led_max; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    led_matrix_set_value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i, some_global_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> led_matrix_check_finished_leds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(led_max);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> my_cool_effect2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">effect_params_t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (params-&gt;init) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">my_cool_effect2_complex_init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(params);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> my_cool_effect2_complex_run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(params);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#endif</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // LED_MATRIX_CUSTOM_EFFECT_IMPLS</span></span></code></pre></div><p>For inspiration and examples, check out the built-in effects under <code>quantum/led_matrix/animations/</code>.</p><h2 id="additional-configh-options" tabindex="-1">Additional <code>config.h</code> Options <a class="header-anchor" href="#additional-configh-options" aria-label="Permalink to &quot;Additional `config.h` Options {#additional-configh-options}&quot;">​</a></h2><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LED_MATRIX_KEYRELEASES</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // reactive effects respond to keyreleases (instead of keypresses)</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LED_MATRIX_TIMEOUT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // number of milliseconds to wait until led automatically turns off</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LED_MATRIX_SLEEP</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // turn off effects when suspended</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LED_MATRIX_LED_PROCESS_LIMIT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (LED_MATRIX_LED_COUNT </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // limits the number of LEDs to process in an animation per task run (increases keyboard responsiveness)</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LED_MATRIX_LED_FLUSH_LIMIT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // limits in milliseconds how frequently an animation will update the LEDs. 16 (16ms) is equivalent to limiting to 60fps (increases keyboard responsiveness)</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LED_MATRIX_MAXIMUM_BRIGHTNESS</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 255</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // limits maximum brightness of LEDs</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LED_MATRIX_DEFAULT_ON</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Sets the default enabled state, if none has been set</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LED_MATRIX_DEFAULT_MODE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LED_MATRIX_SOLID</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Sets the default mode, if none has been set</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LED_MATRIX_DEFAULT_VAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LED_MATRIX_MAXIMUM_BRIGHTNESS</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Sets the default brightness value, if none has been set</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LED_MATRIX_DEFAULT_SPD</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 127</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Sets the default animation speed, if none has been set</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LED_MATRIX_DEFAULT_FLAGS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LED_FLAG_ALL</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Sets the default LED flags, if none has been set</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LED_MATRIX_SPLIT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { X, Y }</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // (Optional) For split keyboards, the number of LEDs connected on each half. X = left, Y = Right.</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                                    // If reactive effects are enabled, you also will want to enable SPLIT_TRANSPORT_MIRROR</span></span></code></pre></div><h2 id="eeprom-storage" tabindex="-1">EEPROM storage <a class="header-anchor" href="#eeprom-storage" aria-label="Permalink to &quot;EEPROM storage {#eeprom-storage}&quot;">​</a></h2><p>The EEPROM for it is currently shared with the RGB Matrix system (it&#39;s generally assumed only one feature would be used at a time).</p><h3 id="direct-operation" tabindex="-1">Direct Operation <a class="header-anchor" href="#direct-operation" aria-label="Permalink to &quot;Direct Operation {#direct-operation}&quot;">​</a></h3><table><thead><tr><th>Function</th><th>Description</th></tr></thead><tbody><tr><td><code>led_matrix_set_value_all(v)</code></td><td>Set all of the LEDs to the given value, where <code>v</code> is between 0 and 255 (not written to EEPROM)</td></tr><tr><td><code>led_matrix_set_value(index, v)</code></td><td>Set a single LED to the given value, where <code>v</code> is between 0 and 255, and <code>index</code> is between 0 and <code>LED_MATRIX_LED_COUNT</code> (not written to EEPROM)</td></tr></tbody></table><h3 id="disable-enable-effects" tabindex="-1">Disable/Enable Effects <a class="header-anchor" href="#disable-enable-effects" aria-label="Permalink to &quot;Disable/Enable Effects {#disable-enable-effects}&quot;">​</a></h3><table><thead><tr><th>Function</th><th>Description</th></tr></thead><tbody><tr><td><code>led_matrix_toggle()</code></td><td>Toggle effect range LEDs between on and off</td></tr><tr><td><code>led_matrix_toggle_noeeprom()</code></td><td>Toggle effect range LEDs between on and off (not written to EEPROM)</td></tr><tr><td><code>led_matrix_enable()</code></td><td>Turn effect range LEDs on, based on their previous state</td></tr><tr><td><code>led_matrix_enable_noeeprom()</code></td><td>Turn effect range LEDs on, based on their previous state (not written to EEPROM)</td></tr><tr><td><code>led_matrix_disable()</code></td><td>Turn effect range LEDs off, based on their previous state</td></tr><tr><td><code>led_matrix_disable_noeeprom()</code></td><td>Turn effect range LEDs off, based on their previous state (not written to EEPROM)</td></tr></tbody></table><h3 id="change-effect-mode" tabindex="-1">Change Effect Mode <a class="header-anchor" href="#change-effect-mode" aria-label="Permalink to &quot;Change Effect Mode {#change-effect-mode}&quot;">​</a></h3><table><thead><tr><th>Function</th><th>Description</th></tr></thead><tbody><tr><td><code>led_matrix_mode(mode)</code></td><td>Set the mode, if LED animations are enabled</td></tr><tr><td><code>led_matrix_mode_noeeprom(mode)</code></td><td>Set the mode, if LED animations are enabled (not written to EEPROM)</td></tr><tr><td><code>led_matrix_step()</code></td><td>Change the mode to the next LED animation in the list of enabled LED animations</td></tr><tr><td><code>led_matrix_step_noeeprom()</code></td><td>Change the mode to the next LED animation in the list of enabled LED animations (not written to EEPROM)</td></tr><tr><td><code>led_matrix_step_reverse()</code></td><td>Change the mode to the previous LED animation in the list of enabled LED animations</td></tr><tr><td><code>led_matrix_step_reverse_noeeprom()</code></td><td>Change the mode to the previous LED animation in the list of enabled LED animations (not written to EEPROM)</td></tr><tr><td><code>led_matrix_increase_speed()</code></td><td>Increase the speed of the animations</td></tr><tr><td><code>led_matrix_increase_speed_noeeprom()</code></td><td>Increase the speed of the animations (not written to EEPROM)</td></tr><tr><td><code>led_matrix_decrease_speed()</code></td><td>Decrease the speed of the animations</td></tr><tr><td><code>led_matrix_decrease_speed_noeeprom()</code></td><td>Decrease the speed of the animations (not written to EEPROM)</td></tr><tr><td><code>led_matrix_set_speed(speed)</code></td><td>Set the speed of the animations to the given value where <code>speed</code> is between 0 and 255</td></tr><tr><td><code>led_matrix_set_speed_noeeprom(speed)</code></td><td>Set the speed of the animations to the given value where <code>speed</code> is between 0 and 255 (not written to EEPROM)</td></tr></tbody></table><h3 id="change-value" tabindex="-1">Change Value <a class="header-anchor" href="#change-value" aria-label="Permalink to &quot;Change Value {#change-value}&quot;">​</a></h3><table><thead><tr><th>Function</th><th>Description</th></tr></thead><tbody><tr><td><code>led_matrix_increase_val()</code></td><td>Increase the value for effect range LEDs. This wraps around at maximum value</td></tr><tr><td><code>led_matrix_increase_val_noeeprom()</code></td><td>Increase the value for effect range LEDs. This wraps around at maximum value (not written to EEPROM)</td></tr><tr><td><code>led_matrix_decrease_val()</code></td><td>Decrease the value for effect range LEDs. This wraps around at minimum value</td></tr><tr><td><code>led_matrix_decrease_val_noeeprom()</code></td><td>Decrease the value for effect range LEDs. This wraps around at minimum value (not written to EEPROM)</td></tr></tbody></table><h3 id="query-current-status" tabindex="-1">Query Current Status <a class="header-anchor" href="#query-current-status" aria-label="Permalink to &quot;Query Current Status {#query-current-status}&quot;">​</a></h3><table><thead><tr><th>Function</th><th>Description</th></tr></thead><tbody><tr><td><code>led_matrix_is_enabled()</code></td><td>Gets current on/off status</td></tr><tr><td><code>led_matrix_get_mode()</code></td><td>Gets current mode</td></tr><tr><td><code>led_matrix_get_val()</code></td><td>Gets current val</td></tr><tr><td><code>led_matrix_get_speed()</code></td><td>Gets current speed</td></tr><tr><td><code>led_matrix_get_suspend_state()</code></td><td>Gets current suspend state</td></tr></tbody></table><h2 id="callbacks" tabindex="-1">Callbacks <a class="header-anchor" href="#callbacks" aria-label="Permalink to &quot;Callbacks {#callbacks}&quot;">​</a></h2><h3 id="indicators" tabindex="-1">Indicators <a class="header-anchor" href="#indicators" aria-label="Permalink to &quot;Indicators {#indicators}&quot;">​</a></h3><p>If you want to set custom indicators, such as an LED for Caps Lock, or layer indication, then you can use the <code>led_matrix_indicators_kb</code> function on the keyboard level source file, or <code>led_matrix_indicators_user</code> function in the user <code>keymap.c</code>.</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> led_matrix_indicators_kb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">led_matrix_indicators_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    led_matrix_set_value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(index, value);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>In addition, there are the advanced indicator functions. These are aimed at those with heavily customized displays, where rendering every LED per cycle is expensive. This includes a special macro to help make this easier to use: <code>LED_MATRIX_INDICATOR_SET_VALUE(i, v)</code>.</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> led_matrix_indicators_advanced_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint8_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> led_min</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uint8_t</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> led_max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    LED_MATRIX_INDICATOR_SET_VALUE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(index, value);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>', 87);
const _hoisted_88 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_88);
}
const feature_led_matrix = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  __pageData,
  feature_led_matrix as default
};
